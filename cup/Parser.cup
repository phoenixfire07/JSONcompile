package Example;

/** section 1: usercode/imports */

import java_cup.runtime.*;

parser code {:
	public static void main(String args[]) throws Exception {
		SymbolFactory sf = new DefaultSymbolFactory();
		if (args.length==0) new Parser(new Scanner(System.in,sf),sf).parse();
		else new Parser(new Scanner(new java.io.FileInputStream(args[0]),sf),sf).parse();
	}
:}

/** section 2: terminals and nonterminals are defines and associated with object classes */

terminal COLON, LSQBRACKET, RSQBRACKET, LBRACE, RBRACE, COMMA;
terminal NUMBER,STRING;
terminal BOOLEAN;
terminal NULL;

non terminal object, members, pair,array, value, elements;

/** section 3: Specify the precdence and associtivy, with the last declaration having the higest precendence */

/** An object is an unordered set of name/value pairs. An object begins with { (left brace) and ends with } (right brace). Each name is followed by : (colon) and the name/value pairs are separated by , (comma). (source: json.org) */

object ::= LBRACE RBRACE | LBRACE members RBRACE {: System.out.println("Object detected " ); :};

/** members pair or pair , members (source: json.org) */

members ::= pair | members COMMA pair {: System.out.println("Members detected "); :};


/** //pair = string : value (source: json.org) */

pair ::= STRING COLON value {: System.out.println("Pair detected "); :};


/** An array is an ordered collection of values. An array begins with [ (left bracket) and ends with ] (right bracket). Values are separated by , (comma). (source: json.org)*/

array ::= LSQBRACKET RSQBRACKET | LSQBRACKET elements RSQBRACKET {: System.out.println("Array detected " ); :};


/** elements= value  | value , elements  (source: json.org)  */

elements ::= value | value COMMA elements {: System.out.println("Elements detected "); :};


/** A value can be a string in double quotes, or a number, or true or false or null, or an object or an array. These structures can be nested. (source: json.org) */

value ::= STRING | NUMBER | object | array | NULL | BOOLEAN  {: System.out.println("Value detected "); :};